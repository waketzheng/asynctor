[project]
name = "asynctor"
description = "Async functions to compare with anyio and asyncio, and toolkit to read excel with async/await."
authors = [{ name = "Waket Zheng", email = "waketzheng@gmail.com" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
dynamic = [ "version" ]
dependencies = [
    "anyio>=3.7.1",
    "redis>=5.0.0",
]
# requires by anyio:
#    "exceptiongroup >= 1.0.2; python_version < '3.11'",
#    "typing_extensions >= 4.1; python_version < '3.11'",

[project.optional-dependencies]
xls = ["pandas>=2.2.0", "openpyxl>=3.1.0"]

[project.urls]
homepage = "https://github.com/waketzheng/asynctor"
repository = "https://github.com/waketzheng/asynctor.git"
"Bug Tracker" = "https://github.com/waketzheng/asynctor/issues"


[tool.poetry]
version = "0"  # Managed by poetry-plugin-version
requires-poetry = ">=2.0"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"

[tool.poetry.group.dev.dependencies]
fast-dev-cli = "^0.11.6"
pandas = "^2.2.3"
openpyxl = "^3.1.5"
fastapi = "^0.115.6"
httpx = "^0.28.1"
asgi-lifespan = "^2.1.0"
types-redis = "^4.6.0.20241004"
pandas-stubs = {version=">=2.2.0", python="^3.10"}
pytest-mock = "^3.14.0"
bandit = "^1.8.2"

[tool.poetry.requires-plugins]
poetry-plugin-shell = ">=1.0"
poetry-plugin-version = ">=0.4"

[tool.mypy]
pretty = true
python_version = "3.9"
ignore_missing_imports = true
check_untyped_defs = true

[tool.coverage.report]
omit = ["*/tests/*", "test_*"]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]

[build-system]
requires = ["poetry-core>=2.0", "poetry-plugin-version>=0.4"]
build-backend = "poetry.core.masonry.api"
