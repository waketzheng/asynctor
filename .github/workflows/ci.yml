# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ci

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    strategy:
      matrix:
        python-version: ["3.10", 3.11, 3.12, 3.13, 3.14]
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - uses: astral-sh/ruff-action@v3
      - name: Check code style and Type Hint then Test with pytest
        run: make ci
        env:
          # The hostname used to communicate with the Redis service container
          REDIS_HOST: localhost
      - name: Upload Coverage
        run: uvx coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true

  coveralls:
    name: Finish Coveralls
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: Finished
        run: uvx coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
