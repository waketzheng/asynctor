# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ci

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    strategy:
      matrix:
        python-version: [3.9, "3.10", 3.11, 3.12, 3.13, 3.14]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - uses: actions/cache@v4
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('**/pdm.lock') }}
      - uses: astral-sh/setup-uv@v6
      - uses: astral-sh/ruff-action@v3
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
        if: ${{ matrix.python-version != '3.14' }}
      - name: Set up PDM by Pipx
        run: |
          pip install --user --upgrade pipx pip
          pipx install pdm
        if: ${{ matrix.python-version == '3.14' }}
      - name: Check code style and Type Hint then Test with pytest
        if: ${{ matrix.python-version != '3.14' }}
        run: |
          pdm config use_uv true
          pdm sync -d -G :all
          make _build
          make _check
          make _test
        env:
          # The hostname used to communicate with the Redis service container
          REDIS_HOST: localhost
      - name: Test with pytest
        if: ${{ matrix.python-version == '3.14' }}
        run: |
          pdm run python -m ensurepip
          pdm run pip install --upgrade pip
          pdm run pip install --upgrade -e ".[xls,redis]"
          pdm run pip install --upgrade mypy pytest-mock types-redis pandas-stubs
          pdm run pip install "coveralls @ git+https://github.com/waketzheng/coveralls-python@4.1.1"
          ruff check
          ruff format --check
          pdm run mypy .
          pdm list --fields=name,version --csv
          # TODO: test all if pydantic/fastapi support python3.14
          pdm run pytest -s tests/test_aio.py tests/test_tasks.py tests/test_xls.py tests/test_version.py tests/test_timing.py
        env:
          REDIS_HOST: localhost
      - name: Upload Coverage
        run: |
          pdm run coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        apt update -y
        apt install -y git
        pip install --upgrade pip
        pip install --upgrade "coveralls @ git+https://github.com/waketzheng/coveralls-python"
        coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
